{"version":3,"sources":["components/Note.js","services/noteservice.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","exported","getAll","axios","get","then","res","data","create","newObject","post","update","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","updatedNote","catch","err","console","log","setTimeout","toggleImportanceOf","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","createdNote","concat","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAeeA,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBACA,iBAEN,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCT1CK,EAAU,aAuBDC,EANE,CACbC,OAhBW,WAEX,OADYC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAe3BC,OAZW,SAAAC,GAEX,OADYN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAW3BI,OARW,SAACC,EAAIH,GAEhB,OADYN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UCHhBO,EAVM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAIA,EAGA,qBAAKlB,UAAU,QAAf,SACKkB,IAJW,MCcTC,EAfA,WAOX,OACI,sBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACI,uBACA,yECqFGC,EA1FH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAUAC,qBARa,WACXC,EACG9B,SACAG,MAAK,SAAA4B,GACJT,EAASS,QAIC,IAGhB,IAgBMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAA1C,GAAI,OAAuB,IAAnBA,EAAKG,aA2B9B,OACE,sBAAKC,UAAU,MAAf,UACE,sCACA,cAAC,EAAD,CAAckB,QAASc,IACvB,8BACE,yBAAQ9B,QAAS,kBAAM6B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAA3C,GAAI,OACnB,cAAC,EAAD,CACAA,KAAMA,EACNC,iBAAkB,kBAtCC,SAAAkB,GACzB,IAAMnB,EAAO8B,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDoC,EACGrB,OAAOC,EAAI2B,GACXlC,MAAK,SAAAmC,GACJhB,EAASD,EAAMa,KAAI,SAAA3C,GAAI,OAAIA,EAAKmB,KAAOA,EAAKnB,EAAO+C,SAEpDC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZZ,EAAgB,SAAD,OACJrC,EAAKK,QADD,sCAGf+C,YAAW,WACTf,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAE1B,KAAOA,SAqBVkC,CAAmBrD,EAAKmB,MAFrCnB,EAAKmB,SAMpB,uBAAMmC,SA9DM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAa,CACjBpD,QAAS2B,EACT0B,MAAM,IAAIC,MAAOC,cACjBzD,UAAW0D,KAAKC,SAAW,IAG7BvB,EACGxB,OAAO0C,GACP7C,MAAK,SAAAmD,GACJhC,EAASD,EAAMkC,OAAOD,IACtB9B,EAAW,QAkDb,UACI,uBACAgC,MAAOjC,EACPkC,SAxBiB,SAACX,GACxBtB,EAAWsB,EAAEY,OAAOF,UAwBd,wBAAQG,KAAM,SAAd,qBAEJ,cAAC,EAAD,QCvFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.97ee325d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n        ? 'make not important'\r\n        : 'make important';\r\n    \r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default Note;","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl);\r\n    return req.then(res => res.data);\r\n};\r\n\r\nconst create = newObject => {\r\n    const req = axios.post(baseUrl, newObject);\r\n    return req.then(res => res.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return req.then(res => res.data);\r\n};\r\n\r\nconst exported = {\r\n    getAll,\r\n    create,\r\n    update\r\n}\r\n\r\nexport default exported;","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if(!message) return null;\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style= {footerStyle}>\r\n            <br />\r\n            <em>Note app, by GASTON ALTAMIRANO 2021</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note.js';\nimport noteService from './services/noteservice.js'\nimport Notification from './components/Notification.js'\nimport Footer from './components/Footer.js';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const hook = () => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }\n\n  useEffect(hook, []);\n\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(createdNote => {\n        setNotes(notes.concat(createdNote));\n        setNewNote('');\n      })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true);\n  \n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then(updatedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : updatedNote))\n      })\n      .catch(err => {\n        console.log(err);\n        setErrorMessage(\n          `Note '${note.content}' was already deleted from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id));\n      })\n  }\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Note</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note key={note.id}\n          note={note}\n          toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n          <input \n          value={newNote}\n          onChange={handleNoteChange} />\n          <button type ='submit'>Save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}