{"version":3,"sources":["components/Note.js","services/noteservice.js","components/Notification.js","components/Footer.js","services/login.js","components/LoginForm.js","components/Togglable.js","components/LoginAndNoteForm.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","token","exported","getAll","axios","get","then","res","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","Notification","message","Footer","style","color","fontStyle","fontSize","login","credentials","LoginForm","setUser","setErrorMessage","useState","username","setUsername","password","setPassword","handleLogin","e","preventDefault","user","window","localStorage","setItem","JSON","stringify","noteService","setTimeout","onSubmit","type","name","value","onChange","Togglable","React","forwardRef","ref","buttonLabel","children","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","displayName","LoginAndNoteForm","setNotes","notes","useRef","useEffect","loggedUserJSON","getItem","parse","noteForm","App","showAll","setShowAll","errorMessage","initialNotes","notesToShow","filter","map","find","n","changedNote","updatedNote","catch","err","console","log","toggleImportanceOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4241eb5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important'\r\n    : 'make important';\r\n\r\n  return (\r\n    <li className='note'>\r\n      <span>{note.content}</span>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n  const req = axios.get(baseUrl);\r\n  return req.then(res => res.data);\r\n};\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n\r\n  const res = await axios.post(baseUrl, newObject, config);\r\n  return res.data;\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const req = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return req.then(res => res.data);\r\n};\r\n\r\nconst exported = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  setToken\r\n};\r\n\r\nexport default exported;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  if (!message) return null;\r\n\r\n  return (\r\n    <div className='error'>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  };\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, by GASTON ALTAMIRANO 2021</em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async credentials => {\r\n  const res = await axios.post(baseUrl, credentials);\r\n  return res.data;\r\n};\r\n\r\nexport default login;","import React, { useState } from 'react';\r\nimport login from '../services/login';\r\nimport noteService from '../services/noteservice.js';\r\n\r\n\r\nconst LoginForm = ({\r\n  setUser,\r\n  setErrorMessage\r\n}) => {\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const user = await login({\r\n        username, password\r\n      });\r\n\r\n      window.localStorage.setItem(\r\n        'loggedNoteppUser', JSON.stringify(user)\r\n      );\r\n      noteService.setToken(user.token);\r\n      setUser(user);\r\n      setUsername('');\r\n      setPassword('');\r\n    } catch (exc) {\r\n      setErrorMessage('wrong credentials');\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            type=\"text\"\r\n            name=\"Username\"\r\n            value={username}\r\n            onChange={setUsername}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={setPassword}\r\n          />\r\n        </div>\r\n        <button id='login-button' type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Togglable = React.forwardRef((\r\n  { buttonLabel, children }\r\n  , ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' };\r\n  const showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className='togglableContent'>\r\n        {children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n};\r\n\r\nTogglable.displayName = 'Togglable';\r\n\r\nexport default Togglable;","import React from 'react';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport noteService from '../services/noteservice.js';\r\nimport LoginForm from './LoginForm.js';\r\nimport NoteForm from './NoteForm.js';\r\nimport Togglable from './Togglable.js';\r\n\r\nconst LoginAndNoteForm = ({\r\n  setErrorMessage,\r\n  setNotes,\r\n  notes\r\n}) => {\r\n\r\n  const [user, setUser] = useState(null);\r\n\r\n  const noteFormRef = useRef();\r\n\r\n  const addNote = (noteObject) => {\r\n    noteFormRef.current.toggleVisibility();\r\n    noteService\r\n      .create(noteObject)\r\n      .then(createdNote => {\r\n        setNotes(notes.concat(createdNote));\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\r\n\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n      noteService.setToken(user.token);\r\n    }\r\n  }, []);\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"log in\">\r\n      <LoginForm\r\n        setErrorMessage={(message) => setErrorMessage(message)}\r\n        setUser={(user) => setUser(user)}\r\n      />\r\n    </Togglable>\r\n  );\r\n\r\n  const noteForm = () => {\r\n    <Togglable buttonLabel=\"new note\" ref={noteFormRef}>\r\n      <NoteForm\r\n        createNote={(note) => addNote(note)}\r\n      />\r\n    </Togglable>;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        user === null ?\r\n          loginForm() :\r\n          <div>\r\n            <p>{user.name} logged in</p>\r\n            {noteForm()}\r\n          </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginAndNoteForm;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note.js';\nimport noteService from './services/noteservice.js';\nimport Notification from './components/Notification.js';\nimport Footer from './components/Footer.js';\nimport LoginAndNoteForm from './components/LoginAndNoteForm';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const hook = () => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes);\n      });\n  };\n\n  useEffect(hook, []);\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true);\n  \n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then(updatedNote => {\n        // eslint-disable-next-line semi\n        setNotes(notes.map(note => note.id !== id ? note : updatedNote))\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(\n          `Note '${note.content}' was already deleted from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <LoginAndNoteForm \n        setErrorMessage={(message) => setErrorMessage(message)}\n        notes={notes}\n        setNotes={(notes) => setNotes(notes)}\n      />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      \n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}